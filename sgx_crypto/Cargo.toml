# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[package]
name = "sgx_crypto"
version = "2.0.0"
authors = ["The Teaclave Authors"]
repository = "https://github.com/apache/teaclave-sgx-sdk"
license-file = "LICENSE"
documentation = "https://teaclave.apache.org/sgx-sdk-docs/"
description = "Rust SGX SDK provides the ability to write Intel SGX applications in Rust Programming Language."
edition = "2021"

[lib]
name = "sgx_crypto"
crate-type = ["rlib"]

[features]
default = ["tcrypto"]
tcrypto = ["sgx_trts"]
ucrypto = ["sgx_rand", "sgx_crypto_sys/ucrypto"]
tserialize = ["tcrypto", "sgx_tserialize"]
userialize = ["ucrypto", "sgx_userialize"]

[target.'cfg(not(target_vendor = "teaclave"))'.dependencies]
sgx_types = { path = "../sgx_types" }
sgx_crypto_sys = { path = "./sgx_crypto_sys" }
sgx_trts = { path = "../sgx_trts", optional = true }

[dependencies]
serde-big-array = "0.5"
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
sgx_rand = { path = "../sgx_rand", default-features = false, features = ["urand"], optional = true }
sgx_tserialize = { path = "../sgx_serialize", default-features = false, features = ["tserialize", "derive"], package = 'sgx_serialize', optional = true }
sgx_userialize = { path = "../sgx_serialize", default-features = false, features = ["userialize", "derive"], package = 'sgx_serialize', optional = true }
